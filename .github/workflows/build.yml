#
#  Copyright (c) 2012-2019 Red Hat, Inc.
#    This program and the accompanying materials are made
#    available under the terms of the Eclipse Public License 2.0
#    which is available at https://www.eclipse.org/legal/epl-2.0/
#
#  SPDX-License-Identifier: EPL-2.0
#
#  Contributors:
#    Red Hat, Inc. - initial API and implementation
name: Docker
on: [pull_request, push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    # - name: Build the Docker image
    #   run: docker build .

    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: quay.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build catalog source and opm bundle images
      run: |-
        DOCKER_USERNAME=aandriienko
        IMAGE_REGISTRY=quay.io
        docker login quay.io
        docker pull alpine
        echo "Pull done"
        docker tag alpine "quay.io/${DOCKER_USERNAME}/alpine"
        echo "Retag done!"
        docker push "quay.io/${DOCKER_USERNAME}/alpine"
        echo "Done!"
        exit 0
        
        pip3 install wheel
        pip3 install --upgrade setuptools
        pip3 install yq
        # Make python3 installed modules "visible"
        export PATH=$HOME/.local/bin:$PATH
        ls $HOME/.local/bin

        platform=kubernetes
        ROOT_PROJECT_DIR="${GITHUB_WORKSPACE}"
        OPM_BUNDLE_DIR="${ROOT_PROJECT_DIR}/deploy/olm-catalog/che-operator/eclipse-che-preview-${platform}"
        OPM_BUNDLE_MANIFESTS_DIR="${OPM_BUNDLE_DIR}/manifests"
        CSV="${OPM_BUNDLE_MANIFESTS_DIR}/che-operator.clusterserviceversion.yaml"

        nightlyVersion=$(yq -r ".spec.version" "${CSV}")
        CATALOG_BUNDLE_IMAGE_NAME_LOCAL="${IMAGE_REGISTRY}/${DOCKER_USERNAME}/eclipse-che-operator-${platform}-bundle:${nightlyVersion}"
        CATALOG_IMAGENAME="${IMAGE_REGISTRY}/${DOCKER_USERNAME}/eclipse-che-catalog-source"

        BASE_DIR="${ROOT_PROJECT_DIR}/olm"
        source ${ROOT_PROJECT_DIR}/olm/olm.sh "${platform}" "${nightlyVersion}" "che"

        # todo: install fixed version....
        installOPM

        ${OPM_BINARY} version

        # todo remove namespace
        buildBundleImage "${OPM_BUNDLE_MANIFESTS_DIR}" "${CATALOG_BUNDLE_IMAGE_NAME_LOCAL}"
